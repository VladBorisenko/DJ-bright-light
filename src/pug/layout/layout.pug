html(lang="en")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title DJ Bright Light
    link(rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css")
    link(rel="stylesheet" href="./assets/css/app.css")
    
  body
    include ../components/header.pug
    include ../components/main.pug
    include ../components/footer.pug
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script> 
    script.
        const Haudio = document.querySelector(".h-aud");    
        const Htime = document.querySelector(".h-time");      
        const HbtnPlay = document.querySelector(".h-play");   
        const HbtnPause = document.querySelector(".h-pause"); 
        const HbtnPrev = document.querySelector(".h-prev");   
        const HbtnNext = document.querySelector(".h-next"); 
        const audio = document.querySelector(".aud");    
        const time = document.querySelector(".time");      
        const btnPlay = document.querySelector(".play");   
        const btnPause = document.querySelector(".pause"); 
        const btnPrev = document.querySelector(".prev");   
        const btnNext = document.querySelector(".next");
        const first = document.querySelector(".track:nth-child(1)");


        const swiper = new Swiper(".swiper", {
        loop: true,
        slidesPerView: 3,
        spaceBetween: 30,
        navigation: {
          nextEl: ".button-next",
          prevEl: ".button-prev",
        },
        breakpoints: {
          
         
          767.75: {
            spaceBetween: 30,
            slidesPerView: 3,
          },
          1: {
            spaceBetween: 15,
            slidesPerView: 2,
          },
        }
        
      });
            // Массив с названиями песен
        let Hplaylist = [
            'war-love.mp3',
            'love-me.mp3',
            'ghost.mp3',
            'n-say-goodbye.mp3',
            'now.mp3',
            'follow.mp3',
            
        ];
      
        let Htreck; // Переменная с индексом трека
        
        HbtnPlay.addEventListener("click", function() {
          HbtnPlay.style.display='none'
          HbtnPause.style.display='block'
        });
        HbtnPause.addEventListener("click", function() {
          HbtnPlay.style.display='block'
          HbtnPause.style.display='none'
        });
        // Событие перед загрузкой страницы
        window.onload = function() {
            Htreck = 0; // Присваиваем переменной ноль
        }


        function switchTreck (HnumTreck) {
        // Меняем значение атрибута src
        Haudio.src = '../assets/audio/' + Hplaylist[HnumTreck];
        // Назначаем время песни ноль
        Haudio.currentTime = 0;
        // Включаем песню
        Haudio.play();
        }

        HbtnPlay.addEventListener("click", function() {
          Haudio.play(); // Запуск песни
          // Запуск интервала 
          
          HaudioPlay = setInterval(function() {
              // Получаем значение на какой секунде песня
              let HaudioTime = Math.round(Haudio.currentTime);
              // Получаем всё время песни
              let HaudioLength = Math.round(Haudio.duration)
              // Назначаем ширину элементу time
              Htime.style.width = (HaudioTime * 100) / HaudioLength + '%';
              // Сравниваем, на какой секунде сейчас трек и всего сколько времени длится
              // И проверяем что переменная treck меньше четырёх
              if (HaudioTime == HaudioLength && Htreck < 5) {
                  Htreck++; // То Увеличиваем переменную 
                  switchTreck(treck); // Меняем трек
              // Иначе проверяем тоже самое, но переменная treck больше или равна четырём
              } else if (HaudioTime == HaudioLength && Htreck >= 5) {
                  Htreck = 0; // То присваиваем treck ноль
                  switchTreck(Htreck); // Меняем трек
              }
            }, 10)
        });


        HbtnPause.addEventListener("click", function() {
          Haudio.pause(); // Останавливает песню
          clearInterval(HaudioPlay) // Останавливает интервал
        });


        HbtnPrev.addEventListener("click", function() {
              // Проверяем что переменная treck больше нуля
              if (Htreck > 0) {
                  Htreck--; // Если верно, то уменьшаем переменную на один
                  switchTreck(Htreck); // Меняем песню.
              } else { // Иначе
                  Htreck = 5; // Присваиваем три
                  switchTreck(Htreck); // Меняем песню
              }
          });


        HbtnNext.addEventListener("click", function() {
            // Проверяем что переменная treck больше трёх
            if (Htreck < 5) { // Если да, то
                Htreck++; // Увеличиваем её на один
                switchTreck(Htreck); // Меняем песню 
            } else { // Иначе
                Htreck = 0; // Присваиваем ей ноль
                switchTreck(Htreck); // Меняем песню
            }
        });

        //-----------------------------------------------------------------

        // Массив с названиями песен
        let playlist = [
            'war-love.mp3',
            'love-me.mp3',
            'ghost.mp3',
            'n-say-goodbye.mp3',
            'now.mp3',
            'follow.mp3',
            
        ];
      
        let treck; // Переменная с индексом трека
        
        btnPlay.addEventListener("click", function() {
          btnPlay.style.display='none'
          btnPause.style.display='block'
        });
        btnPause.addEventListener("click", function() {
          btnPlay.style.display='block'
          btnPause.style.display='none'
        });
        // Событие перед загрузкой страницы
        window.onload = function() {
            treck = 0; // Присваиваем переменной ноль
        }


        function switchTreck (numTreck) {
        // Меняем значение атрибута src
        audio.src = '../assets/audio/' + playlist[numTreck];
        // Назначаем время песни ноль
        audio.currentTime = 0;
        // Включаем песню
        audio.play();
        }

        btnPlay.addEventListener("click", function() {
          audio.play(); // Запуск песни
          // Запуск интервала 
          
          audioPlay = setInterval(function() {
              // Получаем значение на какой секунде песня
              let audioTime = Math.round(audio.currentTime);
              // Получаем всё время песни
              let audioLength = Math.round(audio.duration)
              // Назначаем ширину элементу time
              time.style.width = (audioTime * 100) / audioLength + '%';
              // Сравниваем, на какой секунде сейчас трек и всего сколько времени длится
              // И проверяем что переменная treck меньше четырёх
              if (audioTime == audioLength && treck < 5) {
                  treck++; // То Увеличиваем переменную 
                  switchTreck(treck); // Меняем трек
              // Иначе проверяем тоже самое, но переменная treck больше или равна четырём
              } else if (audioTime == audioLength && treck >= 5) {
                  treck = 0; // То присваиваем treck ноль
                  switchTreck(treck); // Меняем трек
              }
            }, 10)
        });


        btnPause.addEventListener("click", function() {
          audio.pause(); // Останавливает песню
          clearInterval(audioPlay) // Останавливает интервал
        });


        btnPrev.addEventListener("click", function() {
              // Проверяем что переменная treck больше нуля
              if (treck > 0) {
                  treck--; // Если верно, то уменьшаем переменную на один
                  switchTreck(treck); // Меняем песню.
              } else { // Иначе
                  treck = 5; // Присваиваем три
                  switchTreck(treck); // Меняем песню
              }
          });


        btnNext.addEventListener("click", function() {
            // Проверяем что переменная treck больше трёх
            if (treck < 5) { // Если да, то
                treck++; // Увеличиваем её на один
                switchTreck(treck); // Меняем песню 
            } else { // Иначе
                treck = 0; // Присваиваем ей ноль
                switchTreck(treck); // Меняем песню
            }
        if(treck = 1) {
          first.a.style.color='green'
        } else {
            first.a.style.color='white'
        }
        });


      
      